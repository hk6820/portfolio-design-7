#!/usr/bin/env node

/**
 * Portfolio Setup Script
 * This script helps users set up their portfolio quickly
 */

const fs = require('fs');
const path = require('path');
const readline = require('readline');

const rl = readline.createInterface({
  input: process.stdin,
  output: process.stdout
});

const question = (query) => new Promise((resolve) => rl.question(query, resolve));

async function setupPortfolio() {
  console.log('üöÄ Welcome to Portfolio Setup!');
  console.log('This script will help you configure your portfolio quickly.\n');

  try {
    // Get user information
    const name = await question('What is your full name? ');
    const title = await question('What is your professional title? ');
    const email = await question('What is your email address? ');
    const phone = await question('What is your phone number? (optional) ');
    const location = await question('Where are you located? ');
    const linkedin = await question('What is your LinkedIn URL? (optional) ');
    const github = await question('What is your GitHub URL? (optional) ');
    const twitter = await question('What is your Twitter URL? (optional) ');

    // Create environment file
    const envContent = `# Portfolio Configuration Environment Variables
# Generated by setup script

# Basic Information
REACT_APP_NAME="${name}"
REACT_APP_TITLE="${title}"
REACT_APP_EMAIL="${email}"
REACT_APP_PHONE="${phone || '+1 (555) 123-4567'}"
REACT_APP_LOCATION="${location}"

# Social Links
REACT_APP_LINKEDIN_URL="${linkedin || 'https://linkedin.com/in/yourprofile'}"
REACT_APP_GITHUB_URL="${github || 'https://github.com/yourusername'}"
REACT_APP_TWITTER_URL="${twitter || 'https://twitter.com/yourusername'}"
REACT_APP_EMAIL_LINK="mailto:${email}"

# SEO
REACT_APP_SITE_TITLE="${name} - ${title} Portfolio"
REACT_APP_SITE_DESCRIPTION="Professional portfolio showcasing my work as a ${title}"
REACT_APP_SITE_KEYWORDS="portfolio, ${title.toLowerCase()}, web development, software engineering"

# Resume
REACT_APP_RESUME_LINK="/assets/resume.pdf"

# Background Images (optional - will use defaults if not set)
REACT_APP_HOME_BG="/assets/Home-bg.png"
REACT_APP_ABOUT_BG="/assets/About-bg.png"
REACT_APP_EXPERIENCE_BG="/assets/experience-bg1.png"
`;

    // Write .env file
    fs.writeFileSync('.env', envContent);
    console.log('‚úÖ Created .env file with your information');

    // Update package.json with user's name
    const packageJsonPath = path.join(__dirname, 'package.json');
    const packageJson = JSON.parse(fs.readFileSync(packageJsonPath, 'utf8'));
    packageJson.name = name.toLowerCase().replace(/\s+/g, '-') + '-portfolio';
    packageJson.description = `Professional portfolio website for ${name}`;
    fs.writeFileSync(packageJsonPath, JSON.stringify(packageJson, null, 2));
    console.log('‚úÖ Updated package.json with your information');

    // Create assets directory if it doesn't exist
    const assetsDir = path.join(__dirname, 'public', 'assets');
    if (!fs.existsSync(assetsDir)) {
      fs.mkdirSync(assetsDir, { recursive: true });
      console.log('‚úÖ Created assets directory');
    }

    // Create placeholder files
    const placeholderFiles = [
      'public/assets/Home-bg.png',
      'public/assets/About-bg.png',
      'public/assets/experience-bg1.png',
      'public/assets/project1.png',
      'public/assets/project2.png',
      'public/assets/project3.png',
      'public/assets/project4.png',
      'public/assets/resume.pdf'
    ];

    console.log('\nüìÅ Please add the following files to public/assets/:');
    placeholderFiles.forEach(file => {
      console.log(`   - ${file}`);
    });

    console.log('\nüéâ Setup complete!');
    console.log('\nNext steps:');
    console.log('1. Add your images to public/assets/');
    console.log('2. Customize src/config/portfolioConfig.js with your content');
    console.log('3. Run "npm start" to see your portfolio');
    console.log('4. Check USER_GUIDE.md for detailed customization instructions');

  } catch (error) {
    console.error('‚ùå Setup failed:', error.message);
  } finally {
    rl.close();
  }
}

// Run setup
setupPortfolio();
